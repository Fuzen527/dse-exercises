<p>Previously we have done an exercise about finding a number's factors, which can help us determine if the number is prime or not.</p>
<p>If we want to generate a list of primes, instead of checking the primality of each number, the <a href="https://en.wikipedia.org/wiki/Sieve_of_Eratosthenes" target="_blank">Sieve of Eratosthenes</a> is a more efficient way to do so. This is how it is performed:</p>
<ul>
<li>Let's say you want a list of all primes $\le N$. Create a list of all integers from $2$ to $N$.</li>
<li>Repeat the following until the list is empty:
<ul>
    <li>The smallest integer $p$ in the list is prime.</li>
    <li>Remove all multiples of $p$ from the list.</li>
</ul>
</li>
</ul>
<p>Very often, the list is implemented using an array of boolean of size $N$. Initially the array is all true (except 0 and 1 which are false), meaning that the numbers exist in the list. To delete a number $x$, change the $x^\text{th}$ element of the array to false. Please read the pseudo-code in the Wikipedia article for more details.</p>
<p>Write a program to generate a list of primes from $1$ to $N$.</p>

<h1>Input</h1>

<p>The only line contains an integer $N$. ($2 \le N \le 10^7$)</p>

<h1>Output</h1>

<p>Output the primes in increasing order in separate lines.</p>